<?xml version="1.0"?>
<doc>
    <assembly>
        <name>senai_lovePets_webApi</name>
    </assembly>
    <members>
        <member name="M:senai_lovePets_webApi.Controllers.AtendimentosController.ListarTodos">
            <summary>
            Lista todos os atendimentos
            </summary>
            <returns>Um status code 200 - Ok com o conteúdo da lista</returns>
        </member>
        <member name="M:senai_lovePets_webApi.Controllers.AtendimentosController.BuscarPorId(System.Int32)">
            <summary>
            Busca um atendimento através do seu ID
            </summary>
            <param name="idAtendimento">ID do atendimento que será buscado</param>
            <returns>Um atendimento encontrado com o status code 200 - Ok</returns>
        </member>
        <member name="M:senai_lovePets_webApi.Controllers.AtendimentosController.Cadastrar(senai_lovePets_webApi.Domains.Atendimento)">
            <summary>
            Cadastra um novo atendimento
            </summary>
            <param name="novoAtendimento">Objeto com as novas informações</param>
            <returns>Um status code 201 - Created</returns>
        </member>
        <member name="M:senai_lovePets_webApi.Controllers.AtendimentosController.Atualizar(System.Int32,senai_lovePets_webApi.Domains.Atendimento)">
            <summary>
            Atualiza um atendimento
            </summary>
            <param name="idAtendimento">ID do atendimento que será atualizado</param>
            <param name="atendimentoAtualizado">Objeto com as novas informações</param>
            <returns>Um status code 204 - No Content</returns>
        </member>
        <member name="M:senai_lovePets_webApi.Controllers.AtendimentosController.Deletar(System.Int32)">
            <summary>
            Deleta um atendimento existente
            </summary>
            <param name="idAtendimento">ID do atendimento que será deletado</param>
            <returns>Um status code 204 - No Content</returns>
        </member>
        <member name="M:senai_lovePets_webApi.Controllers.AtendimentosController.AlterarSituacao(senai_lovePets_webApi.Domains.Atendimento)">
            <summary>
            Altera o status de um determinado atendimento
            </summary>
            <returns>Um status code 204 - No Content</returns>
        </member>
        <member name="M:senai_lovePets_webApi.Controllers.AtendimentosController.ListarMeus">
            <summary>
            Lista os atendimentos de um usuário logado
            </summary>
            <returns>Uma lista de atendimentos com o Status code 200 - Ok</returns>
        </member>
        <member name="M:senai_lovePets_webApi.Controllers.ClinicasController.BuscarPorId(System.Int32)">
            <summary>
            Busca uma clinica através do seu Id
            </summary>
            <param name="IdClinica">Id da clinica que será Buscada</param>
            <returns>Uma Clínica encontrada com Um Status code 200 - Ok</returns>
        </member>
        <member name="M:senai_lovePets_webApi.Controllers.ClinicasController.ListarTodos">
            <summary>
            Lista todos as Clinicas
            </summary>
            <returns>Um status code 200 - Ok com o conteúdo da Lista</returns>
        </member>
        <member name="M:senai_lovePets_webApi.Controllers.ClinicasController.Cadastrar(senai_lovePets_webApi.Domains.Clinica)">
            <summary>
            Cadastra uma Nova Clinica
            </summary>
            <param name="NovaClinica">Onjeto com as novas Informações</param>
            <returns>Um status code 201 - Created</returns>
        </member>
        <member name="M:senai_lovePets_webApi.Controllers.ClinicasController.Atualizar(System.Int32,senai_lovePets_webApi.Domains.Clinica)">
            <summary>
            Atualiza uma Clinica 
            </summary>
            <param name="IdClinica">Id da Clínica que será Atualizada</param>
            <param name="ClinicaAtualizada">Objeto com as novas informações</param>
            <returns>Um Status code  204 - No Content</returns>
        </member>
        <member name="M:senai_lovePets_webApi.Controllers.ClinicasController.Deletar(System.Int32)">
            <summary>
            Deleta uma Clinica Existente
            </summary>
            <param name="idAtendimento">Id da clinica que será deletada</param>
            <returns>Um status code 204 - No Content</returns>
        </member>
        <member name="M:senai_lovePets_webApi.Interfaces.IAtendimentoRepository.ListarTodos">
            <summary>
            Lista todos os atendimentos
            </summary>
            <returns>Uma lista de atendimentos</returns>
        </member>
        <member name="M:senai_lovePets_webApi.Interfaces.IAtendimentoRepository.BuscarPorId(System.Int32)">
            <summary>
            Busca um atendimento através do seu ID
            </summary>
            <param name="idAtendimento">ID do atendimento que será buscado</param>
            <returns>Um atendimento encontrado</returns>
        </member>
        <member name="M:senai_lovePets_webApi.Interfaces.IAtendimentoRepository.Cadastrar(senai_lovePets_webApi.Domains.Atendimento)">
            <summary>
            Cadastra um novo atendimento
            </summary>
            <param name="novoAtendimento">Objeto com as novas informações</param>
        </member>
        <member name="M:senai_lovePets_webApi.Interfaces.IAtendimentoRepository.Atualizar(System.Int32,senai_lovePets_webApi.Domains.Atendimento)">
            <summary>
            Atualiza um atendimento existente
            </summary>
            <param name="idAtendimento">ID do atendimento que será atualizado</param>
            <param name="atendimentoAtualizado">Objeto com as novas informações</param>
        </member>
        <member name="M:senai_lovePets_webApi.Interfaces.IAtendimentoRepository.Deletar(System.Int32)">
            <summary>
            Deleta um atendimento existente
            </summary>
            <param name="idAtendimento">ID do atendimento que será deletado</param>
        </member>
        <member name="M:senai_lovePets_webApi.Interfaces.IAtendimentoRepository.ListarMeus(System.Int32)">
            <summary>
            Lista todos os atendimentos de um determinado usuário
            </summary>
            <param name="idUsuario">ID do usuário que quer visualizar seus atendimentos</param>
            <returns>Uma lista de atendimentos de um usuário específico</returns>
        </member>
        <member name="M:senai_lovePets_webApi.Interfaces.IAtendimentoRepository.AlterarSituacao(System.Int32,System.Int32)">
            <summary>
            Altera a situação de um atendimento
            </summary>
            <param name="idAtendimento">ID do atendimento que terá a situação alterada</param>
            <param name="novoIdSituacao">ID da nova situação</param>
        </member>
        <member name="M:senai_lovePets_webApi.Interfaces.IClinicaRepository.ListarTodos">
            <summary>
            Lista todos as Clínicas
            </summary>
            <returns>Lista com todas as Clínicas caso haja mais de uma</returns>
        </member>
        <member name="M:senai_lovePets_webApi.Interfaces.IClinicaRepository.BuscarPorId(System.Int32)">
            <summary>
            Busca uma Clínica através do seu id
            </summary>
            <param name="idClinica">Id da clínica que será buscada</param>
            <returns>Clínica encontrada</returns>
        </member>
        <member name="M:senai_lovePets_webApi.Interfaces.IClinicaRepository.Cadastrar(senai_lovePets_webApi.Domains.Clinica)">
            <summary>
            Cadastra uma nova Clínica
            </summary>
            <param name="NovaClinica">Objeto com as novas informações</param>
        </member>
        <member name="M:senai_lovePets_webApi.Interfaces.IClinicaRepository.Atualizar(System.Int32,senai_lovePets_webApi.Domains.Clinica)">
            <summary>
            Atualiza uma Clínica existente
            </summary>
            <param name="idClinica">Id da clinica que será atualizada</param>
            <param name="ClinicaAtualizada">Objeto com as novas informações</param>
        </member>
        <member name="M:senai_lovePets_webApi.Interfaces.IClinicaRepository.Deletar(System.Int32)">
            <summary>
            Clínica que será Deletada
            </summary>
            <param name="IdClinica">Id da Clínica que será deletada</param>
        </member>
        <member name="M:senai_lovePets_webApi.Interfaces.IDonoRepository.ListarTodos">
            <summary>
            Lista todos os Donos
            </summary>
            <returns>Lista de Donos</returns>
        </member>
        <member name="M:senai_lovePets_webApi.Interfaces.IDonoRepository.BuscarPorId(System.Int32)">
            <summary>
            Busca o dono através do seu id
            </summary>
            <param name="IdDono">Id do Dono que será Buscado</param>
            <returns>Um Dono encontrado</returns>
        </member>
        <member name="M:senai_lovePets_webApi.Interfaces.IDonoRepository.Cadastrar(senai_lovePets_webApi.Domains.Dono)">
            <summary>
            Cadastra um novo dono
            </summary>
            <param name="NovoDono">Objeto com as novas informações</param>
        </member>
        <member name="M:senai_lovePets_webApi.Interfaces.IDonoRepository.Atualizar(System.Int32,senai_lovePets_webApi.Domains.Dono)">
            <summary>
            Atualiza as informações de um Dono existente
            </summary>
            <param name="IdDono">Id do dono que será Atualizado</param>
            <param name="DonoAtualizado">Objeto com as novas Informações</param>
        </member>
        <member name="M:senai_lovePets_webApi.Interfaces.IDonoRepository.Deletar(System.Int32)">
            <summary>
            Deleta um Dono exsistente
            </summary>
            <param name="IdDono">Id do dono que será deletado</param>
        </member>
        <member name="M:senai_lovePets_webApi.Interfaces.IPetRepository.ListarTodos">
            <summary>
            Lista todos os pets
            </summary>
            <returns>Lista de Pets</returns>
        </member>
        <member name="M:senai_lovePets_webApi.Interfaces.IPetRepository.BuscarPorId(System.Int32)">
            <summary>
            Busca o pet através do seu id
            </summary>
            <param name="IdPet">Id do pet que será Buscado</param>
            <returns>Um Pet encontrado</returns>
        </member>
        <member name="M:senai_lovePets_webApi.Interfaces.IPetRepository.Cadastrar(senai_lovePets_webApi.Domains.Pet)">
            <summary>
            Cadastra um novo pet
            </summary>
            <param name="NovoPet">Objeto com as novas informações</param>
        </member>
        <member name="M:senai_lovePets_webApi.Interfaces.IPetRepository.Atualizar(System.Int32,senai_lovePets_webApi.Domains.Pet)">
            <summary>
            Atualiza as informações de um Pet existente
            </summary>
            <param name="IdPet">Id do pet que será Atualizado</param>
            <param name="PetAtualizado">Objeto com as novas Informações</param>
        </member>
        <member name="M:senai_lovePets_webApi.Interfaces.IPetRepository.Deletar(System.Int32)">
            <summary>
            Deleta um Pet exsistente
            </summary>
            <param name="IdPet">Id do Pet que será deletado</param>
        </member>
        <member name="M:senai_lovePets_webApi.Interfaces.IRacaRepository.ListarTodos">
            <summary>
            Lista todas as Raças
            </summary>
            <returns>Lista de Raças</returns>
        </member>
        <member name="M:senai_lovePets_webApi.Interfaces.IRacaRepository.BuscarPorId(System.Int32)">
            <summary>
            Busca o Raça através do seu id
            </summary>
            <param name="IdRaca">Id do Raça que será Buscada</param>
            <returns>Um Raça encontrada</returns>
        </member>
        <member name="M:senai_lovePets_webApi.Interfaces.IRacaRepository.Cadastrar(senai_lovePets_webApi.Domains.Raca)">
            <summary>
            Cadastra uma nova Raça
            </summary>
            <param name="NovaRaca">Objeto com as novas informações</param>
        </member>
        <member name="M:senai_lovePets_webApi.Interfaces.IRacaRepository.Atualizar(System.Int32,senai_lovePets_webApi.Domains.Raca)">
            <summary>
            Atualiza as informações de uma Raça existente
            </summary>
            <param name="IdRaca">Id da Raça que será Atualizada</param>
            <param name="RacaAtualizada">Objeto com as novas Informações</param>
        </member>
        <member name="M:senai_lovePets_webApi.Interfaces.IRacaRepository.Deletar(System.Int32)">
            <summary>
            Deleta uma Raça exsistente
            </summary>
            <param name="IdRaca">Id da Raca que será deletada</param>
        </member>
        <member name="M:senai_lovePets_webApi.Interfaces.ISituacaoRepository.ListarTodos">
            <summary>
            Lista todas as Situações
            </summary>
            <returns>Uma lista de Situações</returns>
        </member>
        <member name="M:senai_lovePets_webApi.Interfaces.ISituacaoRepository.BuscarPorId(System.Int32)">
            <summary>
            Busca um Situação através do seu ID
            </summary>
            <param name="IdSituacao">ID da Situação que será buscada</param>
            <returns>Uma Situação encontrada</returns>
        </member>
        <member name="M:senai_lovePets_webApi.Interfaces.ISituacaoRepository.Cadastrar(senai_lovePets_webApi.Domains.Situacao)">
            <summary>
            Cadastra uma nova Situação
            </summary>
            <param name="novaSituacao">Objeto com as novas informações</param>
        </member>
        <member name="M:senai_lovePets_webApi.Interfaces.ISituacaoRepository.Atualizar(System.Int32,senai_lovePets_webApi.Domains.Situacao)">
            <summary>
            Atualiza uma Situação existente
            </summary>
            <param name="IdSituacao">ID da Situação que será atualizada</param>
            <param name="SituacaoAtualizada">Objeto com as novas informações</param>
        </member>
        <member name="M:senai_lovePets_webApi.Interfaces.ISituacaoRepository.Deletar(System.Int32)">
            <summary>
            Deleta uma Situação existente
            </summary>
            <param name="IdSituacao">ID da Situaçao que será deletada</param>
        </member>
        <member name="M:senai_lovePets_webApi.Interfaces.ITipoPetRepository.ListarTodos">
            <summary>
            Lista todos os Tipos de Pets
            </summary>
            <returns>Uma Lista de Tipos de Pets</returns>
        </member>
        <member name="M:senai_lovePets_webApi.Interfaces.ITipoPetRepository.BuscarPorId(System.Int32)">
            <summary>
            Busca um Tipo de Pet através do seu Id
            </summary>
            <param name="IdTipoPet">Id do TipoPet que será buscado</param>
            <returns>Um TipoPet encontrado</returns>
        </member>
        <member name="M:senai_lovePets_webApi.Interfaces.ITipoPetRepository.Cadastrar(senai_lovePets_webApi.Domains.TipoPet)">
            <summary>
            Cadastra um novo TipoPet
            </summary>
            <param name="NovoTipoPet">Objeto com as novas informações</param>
        </member>
        <member name="M:senai_lovePets_webApi.Interfaces.ITipoPetRepository.Atualizar(System.Int32,senai_lovePets_webApi.Domains.TipoPet)">
            <summary>
            Atualiza um TipoPet existente
            </summary>
            <param name="IdTipoPet">Id do TipoPet que será Atualizado</param>
            <param name="TipoPetAtualizado">Objeto com as novas informações</param>
        </member>
        <member name="M:senai_lovePets_webApi.Interfaces.ITipoPetRepository.Deletar(System.Int32)">
            <summary>
            Deleta um TipoPet Existente
            </summary>
            <param name="IdTipoPet">Id do TipoPet que será deletado</param>
        </member>
        <member name="M:senai_lovePets_webApi.Interfaces.ITipoUsuarioRepository.ListarTodos">
            <summary>
            Lista todos os Tipo de Usuários
            </summary>
            <returns>Uma Lista de Tipo de Usuários</returns>
        </member>
        <member name="M:senai_lovePets_webApi.Interfaces.ITipoUsuarioRepository.BuscarPorId(System.Int32)">
            <summary>
            Busca um Tipo de Usuário através do seu Id
            </summary>
            <param name="IdTipoUsuario">Id do Tipo de Usuario que será buscado</param>
            <returns>Um tipo encontrado</returns>
        </member>
        <member name="M:senai_lovePets_webApi.Interfaces.ITipoUsuarioRepository.Cadastrar(senai_lovePets_webApi.Domains.TipoUsuario)">
            <summary>
            Cadastra um novo Tipo de Usuário
            </summary>
            <param name="NovoTipoUsuario">Objeto com as novas informações</param>
        </member>
        <member name="M:senai_lovePets_webApi.Interfaces.ITipoUsuarioRepository.Atualizar(System.Int32,senai_lovePets_webApi.Domains.TipoUsuario)">
            <summary>
            Atualiza um Tipo de Usuário existente
            </summary>
            <param name="IdTipoUsuario">Id do Tipo de Usuário que será Atualizado</param>
            <param name="TipoUsuarioAtualizado">Objeto com as novas informações</param>
        </member>
        <member name="M:senai_lovePets_webApi.Interfaces.ITipoUsuarioRepository.Deletar(System.Int32)">
            <summary>
            Deleta um Tipo de Usuário Existente
            </summary>
            <param name="IdTipoUsuario">Id do Tipo de Usuário que será deletado</param>
        </member>
        <member name="M:senai_lovePets_webApi.Interfaces.IUsuarioRepository.BuscarPorEmailSenha(System.String,System.String)">
            <summary>
            Busca um usuário existente através do seu e-mail e sua senha
            </summary>
            <param name="email">O valor do e-mail digitado pelo usuário</param>
            <param name="senha">O valor da senha digitada pelo usuário</param>
            <returns>Um usuário encontrado</returns>
        </member>
        <member name="M:senai_lovePets_webApi.Interfaces.IVeterinarioRepository.BuscarPorId(System.Int32)">
            <summary>
            Busca um Veterinário através do seu Id
            </summary>
            <param name="IdVeterinario">Id do veterinário que será buscado</param>
            <returns>Um Veterinário encontrado</returns>
        </member>
        <member name="M:senai_lovePets_webApi.Interfaces.IVeterinarioRepository.Cadastrar(senai_lovePets_webApi.Domains.Veterinario)">
            <summary>
            Cadastra um novo Veterinário
            </summary>
            <param name="NovoVeterinario">Objeto com as novas Informações</param>
        </member>
        <member name="M:senai_lovePets_webApi.Interfaces.IVeterinarioRepository.ListarTodos">
            <summary>
            lista todos os Veterinários
            </summary>
            <returns>Uma lista de Veterinários</returns>
        </member>
        <member name="M:senai_lovePets_webApi.Interfaces.IVeterinarioRepository.Atualizar(System.Int32,senai_lovePets_webApi.Domains.Veterinario)">
            <summary>
            Atualiza um Veterinario existente
            </summary>
            <param name="IdVeterinario">Id do Veterinário que será Atualizado</param>
            <param name="VeterinarioAtualizado">Objeto com as novas informações</param>
        </member>
        <member name="M:senai_lovePets_webApi.Interfaces.IVeterinarioRepository.Deletar(System.Int32)">
            <summary>
            Deleta um Veterinário existente
            </summary>
            <param name="IdVeterinario">Id do Veterinário que será deletado</param>
        </member>
        <member name="F:senai_lovePets_webApi.Repositories.AtendimentoRepository.ctx">
            <summary>
            Instancia o objeto ctx utilizando a classe lovePetsContext
            </summary>
        </member>
        <member name="M:senai_lovePets_webApi.Repositories.AtendimentoRepository.AlterarSituacao(System.Int32,System.Int32)">
            <summary>
            Altera a situação de um atendimento
            </summary>
            <param name="idAtendimento">ID do atendimento que terá a situação alterada</param>
            <param name="novoIdSituacao">ID da nova situação</param>
        </member>
        <member name="M:senai_lovePets_webApi.Repositories.AtendimentoRepository.Atualizar(System.Int32,senai_lovePets_webApi.Domains.Atendimento)">
            <summary>
            Atualiza um atendimento existente
            </summary>
            <param name="idAtendimento">ID do atendimento que será atualizado</param>
            <param name="atendimentoAtualizado">Objeto com as novas informações</param>
        </member>
        <member name="M:senai_lovePets_webApi.Repositories.AtendimentoRepository.BuscarPorId(System.Int32)">
            <summary>
            Busca um atendimento através do seu ID
            </summary>
            <param name="idAtendimento">ID do atendimento que será buscado</param>
            <returns>Um atendimento encontrado</returns>
        </member>
        <member name="M:senai_lovePets_webApi.Repositories.AtendimentoRepository.Cadastrar(senai_lovePets_webApi.Domains.Atendimento)">
            <summary>
            Cadastra um novo atendimento
            </summary>
            <param name="novoAtendimento">Objeto com as novas informações</param>
        </member>
        <member name="M:senai_lovePets_webApi.Repositories.AtendimentoRepository.Deletar(System.Int32)">
            <summary>
            Deleta um atendimento existente
            </summary>
            <param name="idAtendimento">ID do atendimento que será deletado</param>
        </member>
        <member name="M:senai_lovePets_webApi.Repositories.AtendimentoRepository.ListarMeus(System.Int32)">
            <summary>
            Lista todos os atendimentos de um determinado usuário
            </summary>
            <param name="idUsuario">ID do usuário que quer visualizar seus atendimentos</param>
            <returns>Uma lista de atendimentos de um usuário específico</returns>
        </member>
        <member name="M:senai_lovePets_webApi.Repositories.AtendimentoRepository.ListarTodos">
            <summary>
            Lista todos os atendimentos
            </summary>
            <returns>Uma lista de atendimentos</returns>
        </member>
        <member name="F:senai_lovePets_webApi.Repositories.ClinicaRepository.ctx">
            <summary>
            instancia o objeto ctx ultilizando a classe lovePetsContext
            </summary>
        </member>
        <member name="M:senai_lovePets_webApi.Repositories.ClinicaRepository.Atualizar(System.Int32,senai_lovePets_webApi.Domains.Clinica)">
            <summary>
            Atualiza uma Clínica existente
            </summary>
            <param name="idClinica">Id da clinica que será atualizada</param>
            <param name="ClinicaAtualizada">Objeto com as novas informações</param>
        </member>
        <member name="M:senai_lovePets_webApi.Repositories.ClinicaRepository.BuscarPorId(System.Int32)">
            <summary>
            Busca uma Clínica através do seu id
            </summary>
            <param name="idClinica">Id da clínica que será buscada</param>
            <returns>Clínica encontrada</returns>
        </member>
        <member name="M:senai_lovePets_webApi.Repositories.ClinicaRepository.Cadastrar(senai_lovePets_webApi.Domains.Clinica)">
            <summary>
            Cadastra uma nova Clínica
            </summary>
            <param name="NovaClinica">Objeto com as novas informações</param>
        </member>
        <member name="M:senai_lovePets_webApi.Repositories.ClinicaRepository.Deletar(System.Int32)">
            <summary>
            Clínica que será Deletada
            </summary>
            <param name="IdClinica">Id da Clínica que será deletada</param>
        </member>
        <member name="M:senai_lovePets_webApi.Repositories.ClinicaRepository.ListarTodos">
            <summary>
            Lista todos as Clínicas
            </summary>
            <returns>Lista com todas as Clínicas caso haja mais de uma</returns>
        </member>
        <member name="M:senai_lovePets_webApi.Repositories.UsuarioRepository.BuscarPorEmailSenha(System.String,System.String)">
            <summary>
            Busca um usuário existente através do seu e-mail e sua senha
            </summary>
            <param name="email">O valor do e-mail digitado pelo usuário</param>
            <param name="senha">O valor da senha digitada pelo usuário</param>
            <returns>Um usuário encontrado</returns>
        </member>
    </members>
</doc>
